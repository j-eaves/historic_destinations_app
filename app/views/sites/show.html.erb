

<body>
<nav class="navbar navbar-default">
  <div class="container-fluid">
    <div>

     <%= form_tag "/sites", method: :post, class: "navbar-form navbar-left" do %>
        <div id="app" class="form-group">
	          <p><input type="text" class="form-control" placeholder="Enter Next Destination" name="search_address">
	          <button type="submit" class="btn btn-primary">Submit</button></p>
        </div>
      <% end %>
      
    </div>
  </div>
</nav>  

<div id="app">
  <!-- {{ sites }}
	<div v-for="site in sites">
	  	<p> Name of historic site: {{ site.name }} </p>
	  	<hr>
	</div> -->
</div>

<!-- The map_canvas id from http://stackoverflow.com/questions/38569860/close-all-other-infowindows-when-one-is-clicked -->
<!-- <script src="https://maps.googleapis.com/maps/api/js" ></script> -->
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=geometry&sensor=false"></script>
<!-- <div id="outer-wrapper">
    <div id="side_bar">
        Side Bar
    </div>
    <div class="map-wrap">
        <div id="map_canvas"></div> -->
        <!-- <div id="map"></div> -->
    <!-- </div> -->
<!-- </div>  -->

<!-- Side bar from https://apneadiving.github.io/ -->


<div id="map_canvas"></div>
<!-- <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&v=3&libraries=geometry"></script> -->

<script>
	//from: http://jsfiddle.net/geocodezip/7de0z99e/2/
	//Modify the code between the double lines to work woth your working code

	var geocoder;
	var map;
	var historicalSites = [];//declare this variable outside of the $.Get function
	var nycHistoricSites = [];//declare this variable outside of the $.Get function
	var latitude = parseFloat("<%= @lat %>");//mine
	var longitude = parseFloat("<%= @lng %>");//mine
	var centerPointPin = {name: "Your Location: <%= @address %>", latitude: latitude, longitude: longitude};//mine

	var convertMetersToImperial = function(meters) {
		var result = "Distance from start point: ";
		var feet = meters/0.304800609601;
		var miles = feet/5280;
		if (miles > 1) {
			result += miles.toFixed(2).toString() + " miles" 
		} else {
			result += feet.toFixed(2).toString() + " feet"
		}
		return result;
	};

	function initialize() {
	  
	  var map = new google.maps.Map(
	    document.getElementById("map_canvas"), {
	      center: new google.maps.LatLng(latitude, longitude), //changed by me
	      zoom: 12,
	      //mapTypeId: google.maps.MapTypeId.ROADMAP //I may not need this
          styles: [
			    {
			        "featureType": "landscape",
			        "stylers": [
			            {
			                "saturation": -7
			            },
			            {
			                "gamma": 1.02
			            },
			            {
			                "hue": "#ffc300"
			            },
			            {
			                "lightness": -10
			            }
			        ]
			    },
			    {
			        "featureType": "road.highway",
			        "stylers": [
			            {
			                "hue": "#ffaa00"
			            },
			            {
			                "saturation": -45
			            },
			            {
			                "gamma": 1
			            },
			            {
			                "lightness": -4
			            }
			        ]
			    },
			    {
			        "featureType": "road.arterial",
			        "stylers": [
			            {
			                "hue": "#ffaa00"
			            },
			            {
			                "lightness": -10
			            },
			            {
			                "saturation": 64
			            },
			            {
			                "gamma": 0.9
			            }
			        ]
			    },
			    {
			        "featureType": "road.local",
			        "stylers": [
			            {
			                "lightness": -5
			            },
			            {
			                "hue": "#00f6ff"
			            },
			            {
			                "saturation": -40
			            },
			            {
			                "gamma": 0.75
			            }
			        ]
			    },
			    {
			        "featureType": "poi",
			        "stylers": [
			            {
			                "saturation": -30
			            },
			            {
			                "lightness": 11
			            },
			            {
			                "gamma": 0.5
			            },
			            {
			                "hue": "#ff8000"
			            }
			        ]
			    },
			    {
			        "featureType": "water",
			        "stylers": [
			            {
			                "hue": "#0077ff"
			            },
			            {
			                "gamma": 1.25
			            },
			            {
			                "saturation": -22
			            },
			            {
			                "lightness": -31
			            }
			        ]
			    }
			],
			scaleControl: true
	  	});

	  function createMarker(location){
		    // Create a marker and set its position.
		    var markerTest = new google.maps.Marker({
		      position: {lat: location.latitude, lng: location.longitude},
		      map: map, 
		      title: location.name
		    });
		    infoWindow(markerTest, map, location);

	  }

	  

	  function createCenterMarker(location){
	
		    var pinImage = new google.maps.MarkerImage("http://www.googlemapsmarkers.com/v1/009900/");
		    // Create a marker and set its position.
		    var marker1 = new google.maps.Marker({
		      position: {lat: location.latitude, lng: location.longitude},
		      title: location.name,
		      icon: pinImage,
		      map: map
		    });
		    infoWindow(marker1, map, location);
	  };

	  createCenterMarker(centerPointPin);

	  //grab the (state) historical sites from my tables via my api
	  $.get("/api/v1/sites", function(response) {
	  	  console.log('This is the $.get /api/v1/sites function')
	  	  historicalSites = response;
		  //create an array and fill it with all of the historicalSites
		  for (var i = 0; i < historicalSites.length; i++) {
		    //call the function 
		    createMarker(historicalSites[i]);

		  }
	  }.bind(this));
	  
	  //grab the historical houses from my tables via my api
	  $.get("/api/v1/houses", function(response) {
		  //console.log('This is the $.get /api/v1/houses function')
		  nycHistoricSites = response;
		  //create an array and fill it with all of the nycHistoricSites
		  for (var i = 0; i < nycHistoricSites.length; i++) {
		    //call the function 
		    createMarker(nycHistoricSites[i]);
		    
		  }
	  }.bind(this));

	}

	//Render the map window
	google.maps.event.addDomListener(window, "load", initialize);

	// global infowindow
	var pinInfowindow = new google.maps.InfoWindow({
	  maxWidth: 385
	});

	

	function infoWindow(marker, map, location) {

	  google.maps.event.addListener(marker, 'click', function() {
	  	//This was the original code
	    // var html = "<p><b><a href="+location.url+">"+location.name+"</a></b></p>"+"<p>"+location.phone+"</p>"+"<p><a href="+location.image_url+"><img src="+location.image_url+" height='142' ></a></p>"+"<p>"+location.description+"</p>";

	    //---------------------------------------------------
	    //Start distance function (from: http://stackoverflow.com/questions/8404108/how-to-get-distance-between-a-marker-and-the-center-in-googlemaps?noredirect=1&lq=1)
		
		var center = map.getCenter();
		var markerLatLng = marker.getPosition();
		var distance = google.maps.geometry.spherical.computeDistanceBetween(center, markerLatLng);
		console.log("TESTING...")
		console.log(convertMetersToImperial(distance));
	    //End distance function
	    //---------------------------------------------------
	    var location_url = "<h3><b><a href="+location.url+">"+location.name+"</a></b></h3>";
	    var phone = "<p>"+location.phone+"</p>";
	    var location_image_url = "<p><img class='enlarge-onhover' src="+location.image_url+" alt="+location.alt_image_url+"></p>";
	    var location_description = "<p>"+location.description+"</p>";
	    var location_distance = "<p><b>"+convertMetersToImperial(distance)+"</b></p>";
		//---------------------------------------------------

	    //This is the code for enlarging the image in the infoWindow
	    var html = location_url+phone+location_image_url+location_description+location_distance;
	    //---------------------------------------------------

	    // set the content (saved in html variable using function closure)
	    if (location.name.includes("Your Location:")) {
	    	var html1 = "<div><h3>" + location.name + "</h3><p>";
	    	pinInfowindoww.setContent(html1);
	    } else {
	    	pinInfowindow.setContent(html);
	    }
	    // open the infowindow on the marker.
	    pinInfowindow.open(map, marker);
	  });

	}
	
</script>

</body>

